#vars

    signature  "${ signature? }"
    return     replace("${ return_clause? }" "`(\$[^`]+)`" html_encode("<var>$1</var>"))
    disclaimer replace("${ disclaimer? | trim }" "`(\$[^`]+)`" html_encode("<var>$1</var>"))

    body       "${ body? }"
    body       replace(@body "^\s*>[ \t]+\*\*Note\*\*(.*)" html_encode(trim('
        ><span class="color-fg-accent"><svg class="octicon octicon-info mr-2" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hiddent="true">
            <path fill-rule="evenodd" d="M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z"></path>
        </svg>Note$2</span>$1<br>
    ')))

    body       replace(@body "^\s*>[ \t]+\*\*Warning\*\*(.*)" html_encode(trim('
        ><span class="color-fg-attention"><svg class="octicon octicon-alert mr-2" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hiddent="true">
            <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
        </svg>Warning</span>$1<br>
    ')))

    related    str_split(trim("${ related? | trim | lower }") ",")

    examples   "${ examples? }"
    examples   replace(@examples "\.(.*)(?=\s+```php)" '&lt;span class="code-caption"&gt;$1&lt;/span&gt;')

    tags       trim("${ tags? }")

    tags       replace(@tags "<li>locale-aware</li>" '<li data-tag="locale-aware">locale-aware</li>')
    tags       replace(@tags "<li>deprecated</li>" '<li data-tag="deprecated">deprecated</li>')
    tags       replace(@tags "<li>extn\:\s*(.*)</li>" '<li data-tag="extn">$1</li>')

#end

#if @signature eq ''

    #vars
        signature '(mixed $value): bool'
    #end

#end

dt (id="${ name | trim | lower }") {

    "${ name }&nbsp;"

    import "templates/anchor" {
        href "${ name }"
    }

    #if @tags ne ''
        ul (.tags) @tags
    #end

}

dd
{

    code "${ name }${ @signature }"

    #if @disclaimer ne ''
        span (.md-inline) "â€” ${ @disclaimer }"
    #end

    p (.md-inline .return) @return

    div (.md) @body

} // end of dd

#if len(@examples) gt 0

    dd (.examples) {

        details (open) {
            summary "Examples"

            div (.highlight .highlight-text-html-php .md .notranslate .overflow-auto .position-relative) @examples
        }
    }

#end

#if len(@related) gt 1

    dd (.related) {
        p "Related:"
        ul
        {
            each @related {
                li { a (href="#${@this | trim }") "${@this | trim }" }
            }
        }
    }

#end